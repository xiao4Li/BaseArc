-- MySQL Script generated by MySQL Workbench
-- 06/12/17 21:39:25
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema basearc
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema basearc
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `basearc` DEFAULT CHARACTER SET utf8 ;
USE `basearc` ;

-- -----------------------------------------------------
-- Table `basearc`.`SYS_DEPARTMENT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `basearc`.`SYS_DEPARTMENT` ;

CREATE TABLE IF NOT EXISTS `basearc`.`SYS_DEPARTMENT` (
  `_ID` VARCHAR(64) NOT NULL,
  `_NAME` VARCHAR(100) NOT NULL,
  `_PARENT_ID` VARCHAR(64) NULL,
  `_STATUS` INT NULL,
  PRIMARY KEY (`_ID`),
  INDEX `DEPT_DEPT_PARENT_ID_idx` (`_PARENT_ID` ASC),
  CONSTRAINT `_FK_SYS_DEPT_PARENT_ID`
    FOREIGN KEY (`_PARENT_ID`)
    REFERENCES `basearc`.`SYS_DEPARTMENT` (`_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `basearc`.`SYS_USER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `basearc`.`SYS_USER` ;

CREATE TABLE IF NOT EXISTS `basearc`.`SYS_USER` (
  `_ID` VARCHAR(64) NOT NULL COMMENT 'UUID',
  `_NAME` VARCHAR(100) NULL COMMENT '用户名称，唯一',
  `_EMAIL` VARCHAR(100) NULL,
  `_TEL` VARCHAR(20) NULL,
  `_NO` VARCHAR(20) NULL COMMENT '用户编号',
  `_ICON_ID` VARCHAR(200) NULL,
  `_ACCOUNT` VARCHAR(50) NOT NULL COMMENT '用户登录账号',
  `_PASSWORD` VARCHAR(255) NULL,
  `_SALT` VARCHAR(20) NULL,
  `_STATUS` INT NULL COMMENT '用户状态',
  `_DEPT_ID` VARCHAR(64) NULL COMMENT '关联部门ID',
  PRIMARY KEY (`_ID`),
  UNIQUE INDEX `_NAME_UNIQUE` (`_NAME` ASC),
  UNIQUE INDEX `_EMAIL_UNIQUE` (`_EMAIL` ASC),
  UNIQUE INDEX `_TEL_UNIQUE` (`_TEL` ASC),
  UNIQUE INDEX `_NO_UNIQUE` (`_NO` ASC),
  UNIQUE INDEX `_ACCOUNT_UNIQUE` (`_ACCOUNT` ASC),
  INDEX `USER_DEPT_ID_idx` (`_DEPT_ID` ASC),
  CONSTRAINT `_FK_SYS_USER_DEPT_ID`
    FOREIGN KEY (`_DEPT_ID`)
    REFERENCES `basearc`.`SYS_DEPARTMENT` (`_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `basearc`.`SYS_RESOURCE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `basearc`.`SYS_RESOURCE` ;

CREATE TABLE IF NOT EXISTS `basearc`.`SYS_RESOURCE` (
  `_ID` VARCHAR(64) NOT NULL,
  `_NAME` VARCHAR(100) NOT NULL,
  `_TYPE` INT NOT NULL,
  `_URL` VARCHAR(200) NULL,
  `_PERMISSION` VARCHAR(200) NULL,
  `_ICON` VARCHAR(100) NULL,
  `_PARENT_ID` VARCHAR(64) NULL,
  `_STATUS` INT NULL,
  PRIMARY KEY (`_ID`),
  INDEX `_FK_SYS_RESOURCE_PARENT_ID_idx` (`_PARENT_ID` ASC),
  CONSTRAINT `_FK_SYS_RESOURCE_PARENT_ID`
    FOREIGN KEY (`_PARENT_ID`)
    REFERENCES `basearc`.`SYS_RESOURCE` (`_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `basearc`.`SYS_ROLE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `basearc`.`SYS_ROLE` ;

CREATE TABLE IF NOT EXISTS `basearc`.`SYS_ROLE` (
  `_ID` VARCHAR(64) NOT NULL,
  `_ROLE_CODE` VARCHAR(100) NOT NULL COMMENT '角色编码',
  `_DESC` VARCHAR(200) NULL COMMENT '对该角色的描述',
  `STATUS` INT NOT NULL,
  PRIMARY KEY (`_ID`),
  UNIQUE INDEX `_NAME_UNIQUE` (`_ROLE_CODE` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `basearc`.`SYS_ROLE_RESOURCE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `basearc`.`SYS_ROLE_RESOURCE` ;

CREATE TABLE IF NOT EXISTS `basearc`.`SYS_ROLE_RESOURCE` (
  `_ID_ROLE` VARCHAR(64) NOT NULL,
  `_ID_RESOURCE` VARCHAR(64) NOT NULL,
  `_ID` VARCHAR(64) NOT NULL,
  INDEX `_FK_ROLE_ID_idx` (`_ID_ROLE` ASC),
  INDEX `_FK_RESOURCE_ID_idx` (`_ID_RESOURCE` ASC),
  PRIMARY KEY (`_ID`),
  CONSTRAINT `_FK_SYS_ROLE_RESOURCE_ID_ROLE`
    FOREIGN KEY (`_ID_ROLE`)
    REFERENCES `basearc`.`SYS_ROLE` (`_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `_FK_SYS_ROLE_RESOURCE_ID_RESOURCE`
    FOREIGN KEY (`_ID_RESOURCE`)
    REFERENCES `basearc`.`SYS_RESOURCE` (`_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `basearc`.`SYS_USER_ROLE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `basearc`.`SYS_USER_ROLE` ;

CREATE TABLE IF NOT EXISTS `basearc`.`SYS_USER_ROLE` (
  `_ID` VARCHAR(64) NOT NULL,
  `_ID_USER` VARCHAR(64) NOT NULL,
  `_ID_ROLE` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`_ID`),
  INDEX `_FK_USER_ID_idx` (`_ID_USER` ASC),
  INDEX `_FK_ROLE_ID_idx` (`_ID_ROLE` ASC),
  CONSTRAINT `_FK_SYS_USER_ROLE_ID_USER`
    FOREIGN KEY (`_ID_USER`)
    REFERENCES `basearc`.`SYS_USER` (`_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `_FK_SYS_USER_ROLE_ID_ROLE`
    FOREIGN KEY (`_ID_ROLE`)
    REFERENCES `basearc`.`SYS_ROLE` (`_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `basearc`.`SYS_USER_RESOURCE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `basearc`.`SYS_USER_RESOURCE` ;

CREATE TABLE IF NOT EXISTS `basearc`.`SYS_USER_RESOURCE` (
  `_ID` VARCHAR(64) NOT NULL,
  `_ID_USER` VARCHAR(64) NOT NULL,
  `_ID_RESOURCE` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`_ID`),
  INDEX `_FK_USER_RESOURCE_ID_idx` (`_ID_USER` ASC),
  INDEX `_FK_RESOURCE_USER_ID_idx` (`_ID_RESOURCE` ASC),
  CONSTRAINT `_FK_SYS_USER_RESOURCE_USER_ID`
    FOREIGN KEY (`_ID_USER`)
    REFERENCES `basearc`.`SYS_USER` (`_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `_FK_SYS_USER_RESOURCE_ID`
    FOREIGN KEY (`_ID_RESOURCE`)
    REFERENCES `basearc`.`SYS_RESOURCE` (`_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `basearc`.`SYS_DICT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `basearc`.`SYS_DICT` ;

CREATE TABLE IF NOT EXISTS `basearc`.`SYS_DICT` (
  `_KEY` VARCHAR(100) NOT NULL,
  `_VALUE` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`_KEY`),
  UNIQUE INDEX `_KEY_UNIQUE` (`_KEY` ASC))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;





INSERT INTO SYS_USER
(_ID,_NAME,_EMAIL,_TEL,_NO,_ICON_ID,_ACCOUNT,_PASSWORD,_SALT,_STATUS,_DEPT_ID)
VALUES
('CD000001','王五','505211778@qq.com','15281061543','CD00001',NULL,'admin','df49ec48e56522d11151fb9ecd683aef','123',0,NULL);

 INSERT INTO SYS_RESOURCE (
             _ID,     _NAME ,  _TYPE ,  _URL,      _PERMISSION ,_ICON,_PARENT_ID,_STATUS
 ) VALUES ('MENU_01','首页',     0,    'dashboard',  NULL,      'icon-home', NULL,0);

  INSERT INTO SYS_RESOURCE (
             _ID,     _NAME ,  _TYPE ,  _URL,      _PERMISSION ,_ICON,_PARENT_ID,_STATUS
 ) VALUES ('MENU_02','企业员工权限管理',     1,    'usermanage',  NULL,      'icon-cogs', NULL,0);

  INSERT INTO SYS_RESOURCE (
             _ID,     _NAME ,  _TYPE ,  _URL,      _PERMISSION ,_ICON,_PARENT_ID,_STATUS
 ) VALUES ('MENU_03','企业员工管理',     0,    'usermanage/user',null,  NULL, 'MENU_02',     NULL);

   INSERT INTO SYS_RESOURCE (
             _ID,     _NAME ,  _TYPE ,  _URL,      _PERMISSION ,  _ICON,_PARENT_ID,_STATUS
 ) VALUES ('MENU_04','企业权限管理',     0,    'usermanage/permission',  NULL, null,    'MENU_02',   NULL);

INSERT INTO SYS_DICT values ('LOGIN_ER_01','用户名为空');

INSERT INTO SYS_DICT values ('LOGIN_ER_02','密码为空');

INSERT INTO SYS_DICT values ('LOGIN_ER_03','验证码为空');

INSERT INTO SYS_DICT values ('LOGIN_ER_04','验证码不匹配');

INSERT INTO SYS_DICT values ('LOGIN_ER_05','用户名密码错误');


UPDATE  sys_resource SET `_URL` = 'index' where `_ID` = 'MENU_01';
UPDATE  sys_resource SET `_URL` = 'user' where `_ID` = 'MENU_02';
UPDATE  sys_resource SET `_URL` = 'user/list' where `_ID` = 'MENU_03';
UPDATE  sys_resource SET `_URL` = 'user/permission' where `_ID` = 'MENU_04';
